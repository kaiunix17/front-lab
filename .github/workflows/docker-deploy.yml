#name: Deploy app with dockera
#
#on:
#  push:
#    branches:
#      - main
#  workflow_dispatch:
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    outputs:
#      image_name: registry.digitalocean.com/kyiv-registry/my-node-app:${{ github.sha }}
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Build and push docker
#        working-directory: ./my-node-app
#        run: |
#          docker build -t registry.digitalocean.com/kyiv-registry/my-node-app:${{ github.sha }} .
#          echo ${{ secrets.REGISTRY_TOKEN }} | docker login registry.digitalocean.com -u ${{ secrets.REGISTRY_USER }} --password-stdin
#          docker push registry.digitalocean.com/kyiv-registry/my-node-app:${{ github.sha }}
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Copy files via SSH
#        uses: appleboy/scp-action@v1
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          key: ${{ secrets.SSH_KEY }}
#          port: ${{ secrets.SSH_PORT }}
#          source: "./my-node-app/docker-compose-prod.yaml"
#          target: "/opt/my-node-app-on-docker/"
#          strip_components: 2
#
#      - name: Restart docker compose
#        uses: appleboy/ssh-action@v1
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          key: ${{ secrets.SSH_KEY }}
#          port: ${{ secrets.SSH_PORT }}
#          script: |
#            cd /opt/my-node-app-on-docker
#            mv docker-compose-prod.yaml docker-compose.yaml
#            echo ${{ secrets.REGISTRY_TOKEN }} | docker login registry.digitalocean.com -u ${{ secrets.REGISTRY_USER }} --password-stdin
#            yq -i '.services.web.image = "${{ needs.build.outputs.image_name }}"' docker-compose.yaml
#            docker compose up -d --remove-orphans


name: Deploy app with docker

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      image_name: registry.digitalocean.com/kyiv-registry/my-node-app:${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Build docker image
        working-directory: ./my-node-app
        run: |
          docker build -t registry.digitalocean.com/kyiv-registry/my-node-app:${{ github.sha }} .

      - name: Login to DigitalOcean Registry
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Push docker image
        working-directory: ./my-node-app
        run: |
          docker push registry.digitalocean.com/kyiv-registry/my-node-app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Copy files via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./my-node-app/docker-compose-prod.yaml"
          target: "/opt/my-node-app-on-docker/"
          strip_components: 2

      - name: Login to DigitalOcean Registry on server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker login registry.digitalocean.com -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_TOKEN }}

      - name: Deploy with docker-compose
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /opt/my-node-app-on-docker
            mv docker-compose-prod.yaml docker-compose.yaml
            yq -i '.services.web.image = "registry.digitalocean.com/kyiv-registry/my-node-app:${{ github.sha }}"' docker-compose.yaml
            docker compose up -d --remove-orphans